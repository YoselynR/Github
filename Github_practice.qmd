---
title: "Exercises"
format: html
editor: visual
editor_options: 
  chunk_output_type: console
---

```{r}
# load packages ----
library(tidyverse)

#define function ----
equation1 <- function(x) {
  3*x^2+4
}

# create a data frame with range of values to evaluate function
my_data_range<-data.frame(x=c(1,100))
#view(my_data_range)

#plot function over continuous curve
ggplot(data=my_data_range, mapping= aes(x=x))+
  geom_function(fun=equation1)

```

```{r}
#define function ----
equation2 <- function(x) {
  24-5*x^3+21*x^2
}

# create a data frame with range of values, {data frame can be defined within ggplot}
my_data_range2<-data.frame(x=c(-50,50))

#plot
ggplot(my_data_range2, aes(x=x))+
  geom_function(fun=equation2)

```

```{r}
# create a new function C(t) ----
ct <- function(t) {
  t^3
}

#derivative of C(t), {expression defined in derivative function} ----
dc_dt<-D(expr = expression(t^3), name="t")
dc_dt

#store the derivative as a function
dc_dt_ct <- function(t) {
  3*t^2
}

#dataframe of values ----
data_range<-data.frame(t=c(-5,5))

#plot function ----
ggplot(data_range, aes(x=t))+
  geom_function(fun=ct, color="red")+
  geom_function(fun=dc_dt_ct, color="blue")

```

```{r}
#create the expression
f_xyz<-expression(2*x*y-3*x^2*z^3)

#partial with respect to x
df_dx_partial<-D(expr = f_xyz, name = "x")
df_dx_partial

#partial with respect to y
df_dy_partial<-D(expr = f_xyz, name = "y")
df_dy_partial

#partial with respect to z
df_dz_partial<-D(expr = f_xyz, name = "z")
df_dz_partial

```

